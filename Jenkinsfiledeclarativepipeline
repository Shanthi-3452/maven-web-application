pipeline
{
    
    agent any
tools{
    maven "maven3.8.4"
} 

//Add the PollSCM
triggers {
  pollSCM ('* * * * *')
}

//Discard Old builds
options {
  timestamps()
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '5', numToKeepStr: '4')
}

stages{
//Checkout code stage
stage('Checkoutcode')
{
    steps{
            git branch: 'development', credentialsId: '1d420f11-932b-4a6f-a1b3-80c96a774b54', url: 'https://github.com/Shanthi-3452/maven-web-application.git'
    }
}
//Build Stage
stage('Build')
{
    steps{
        sh "mvn clean package"
    }
}
//Execute SonarQube
stage('ExecuteSonarQubeReport')
{
    steps{
        sh "mvn sonar:sonar"
    }
}
//Upload Atifact
stage('UploadArtifactIntoNexus')
{
    steps{
        sh "mvn deploy"
    }
}
//Deploy the app into Tomcat
stage('DepoyAppIntoTomcat')
{
steps{
    sshagent(['4d6eb849-197e-41d3-97f3-e7e02b816a62']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.33.239:/opt/apache-tomcat-9.0.65/webapps/"
    }
}
}
   
}//Stages closing

post {
  success {
    sendSlackNotifications('SUCCESS')
  }
  failure {
   sendSlackNotifications('FAILURE')
  }
}

}//Pipeline closing




def sendSlackNotifications(String buildStatus = 'STARTED') {
  
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: 'walmart1')
}
