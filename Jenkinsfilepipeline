node{
    def mavenHome = tool name: "maven3.8.4"
    properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '5', numToKeepStr: '5')), pipelineTriggers([pollSCM('* * * * *')])])

echo "Job name is: ${env.JOB_NAME}"
echo "Node name is: ${env.NODE_NAME}"
echo "Build number is: ${env.BUILD_NUMBER}"

try{
slackNotifications('STARTED')

stage('CheckoutCode')
{
    git branch: 'development', credentialsId: '1d420f11-932b-4a6f-a1b3-80c96a774b54', url: 'https://github.com/Shanthi-3452/maven-web-application.git'
}

stage('Build')
{
    sh "${mavenHome}/bin/mvn clean package"
}
/*
stage('ExecuteSonarQubeReport')
{
    sh "${mavenHome}/bin/mvn clean sonar:sonar"
}
stage('UploadArtifactIntoNexus')
{
    sh "${mavenHome}/bin/mvn deploy"
}
stage('DeployAppIntoTomcat')
{
   sshagent(['4d6eb849-197e-41d3-97f3-e7e02b816a62']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.33.239:/opt/apache-tomcat-9.0.65/webapps/"
}
}
*/

}//try block closing
catch (e){
slackNotifications('FAILED')
throw e
}
finally{
slackNotifications(currentBuild.result)
}


}//Node closing

//Code Snippet for sending slack notifications.

def slackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  //buildStatus =  buildStatus ?: 'SUCCESS'
  buildStatus = buildStatus ? "SUCCESS":"FAILURE"

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: "#walmart")
}
